#include <iostream>
#include <string>
#include <vector>

using namespace std;

int solution(vector<vector<int>> board, vector<int> moves) {
    int answer = 0; //터진 인형의 갯수
    int cnt = 0; //쌓인 인형의 갯수
    int n = moves.size(); //이동 횟수
    int scale = board.size();
    vector<int> bucket;

    for (int t = 0; t < n; t++) {
        int item;
        int target = moves.front() - 1; //이동할 곳

        for (int y = 0; y < scale; y++) {
            if (board[y][target] != 0) {
                item = board[y][target];
                board[y][target] = 0;
                bucket.push_back(item); cnt++;
                if (cnt > 1 ) {
                    if (bucket.at(cnt - 1) == bucket.at(cnt - 2)) {
                        //bucket에서 지우고 갯수 추가
                        answer += 2;
                        bucket.pop_back();
                        bucket.pop_back();
                        cnt -= 2;
                    }
                }
                break;
            }
        }
        moves.erase(moves.begin());
    }

    return answer;
}

int main() {

    vector<vector<int>> board =
    {
        {0,0,0,0,0},
        {0,0,1,0,3},
        {0,2,5,0,1},
        {4,2,4,4,2},
        {3,5,1,3,1}
    };

    vector<int> moves = { 1,5,3,5,1,2,1,4 };

    int answer = solution(board, moves);

    cout << answer;

    return 0;
}